{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initPjs = void 0;\n\nconst initPjs = main => {\n  const particlesJS = (tagId, options) => {\n    return main.load(tagId, options);\n  };\n\n  particlesJS.load = (tagId, pathConfigJson, callback) => {\n    main.loadJSON(tagId, pathConfigJson).then(container => {\n      if (container) {\n        callback(container);\n      }\n    });\n  };\n\n  particlesJS.setOnClickHandler = callback => {\n    main.setOnClickHandler(callback);\n  };\n\n  const pJSDom = main.dom();\n  return {\n    particlesJS,\n    pJSDom\n  };\n};\n\nexports.initPjs = initPjs;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/pjs.js"],"names":["Object","defineProperty","exports","value","initPjs","main","particlesJS","tagId","options","load","pathConfigJson","callback","loadJSON","then","container","setOnClickHandler","pJSDom","dom"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMA,OAAO,GAAIC,IAAD,IAAU;AACtB,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACpC,WAAOH,IAAI,CAACI,IAAL,CAAUF,KAAV,EAAiBC,OAAjB,CAAP;AACH,GAFD;;AAGAF,EAAAA,WAAW,CAACG,IAAZ,GAAmB,CAACF,KAAD,EAAQG,cAAR,EAAwBC,QAAxB,KAAqC;AACpDN,IAAAA,IAAI,CAACO,QAAL,CAAcL,KAAd,EAAqBG,cAArB,EAAqCG,IAArC,CAA2CC,SAAD,IAAe;AACrD,UAAIA,SAAJ,EAAe;AACXH,QAAAA,QAAQ,CAACG,SAAD,CAAR;AACH;AACJ,KAJD;AAKH,GAND;;AAOAR,EAAAA,WAAW,CAACS,iBAAZ,GAAiCJ,QAAD,IAAc;AAC1CN,IAAAA,IAAI,CAACU,iBAAL,CAAuBJ,QAAvB;AACH,GAFD;;AAGA,QAAMK,MAAM,GAAGX,IAAI,CAACY,GAAL,EAAf;AACA,SAAO;AAAEX,IAAAA,WAAF;AAAeU,IAAAA;AAAf,GAAP;AACH,CAhBD;;AAiBAd,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPjs = void 0;\nconst initPjs = (main) => {\n    const particlesJS = (tagId, options) => {\n        return main.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        main.loadJSON(tagId, pathConfigJson).then((container) => {\n            if (container) {\n                callback(container);\n            }\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        main.setOnClickHandler(callback);\n    };\n    const pJSDom = main.dom();\n    return { particlesJS, pJSDom };\n};\nexports.initPjs = initPjs;\n"]},"metadata":{},"sourceType":"script"}