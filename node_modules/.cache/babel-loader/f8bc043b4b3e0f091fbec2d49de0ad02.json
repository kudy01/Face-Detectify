{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameManager = void 0;\n\nclass FrameManager {\n  constructor(container) {\n    this.container = container;\n  }\n\n  nextFrame(timestamp) {\n    const container = this.container;\n    const options = container.options;\n    const fpsLimit = options.fpsLimit > 0 ? options.fpsLimit : 60;\n\n    if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / fpsLimit) {\n      container.draw();\n      return;\n    }\n\n    const deltaValue = timestamp - container.lastFrameTime;\n    const delta = {\n      value: deltaValue,\n      factor: options.fpsLimit > 0 ? 60 * deltaValue / 1000 : 3.6\n    };\n    container.lastFrameTime = timestamp;\n    container.particles.draw(delta);\n\n    if (options.particles.move.enable && container.getAnimationStatus()) {\n      container.draw();\n    }\n  }\n\n}\n\nexports.FrameManager = FrameManager;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/Core/FrameManager.js"],"names":["Object","defineProperty","exports","value","FrameManager","constructor","container","nextFrame","timestamp","options","fpsLimit","lastFrameTime","undefined","draw","deltaValue","delta","factor","particles","move","enable","getAnimationStatus"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMA,YAAN,CAAmB;AACfC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AACDC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,UAAMF,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAMG,OAAO,GAAGH,SAAS,CAACG,OAA1B;AACA,UAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAR,GAAmB,CAAnB,GAAuBD,OAAO,CAACC,QAA/B,GAA0C,EAA3D;;AACA,QAAIJ,SAAS,CAACK,aAAV,KAA4BC,SAA5B,IAAyCJ,SAAS,GAAGF,SAAS,CAACK,aAAV,GAA0B,OAAOD,QAA1F,EAAoG;AAChGJ,MAAAA,SAAS,CAACO,IAAV;AACA;AACH;;AACD,UAAMC,UAAU,GAAGN,SAAS,GAAGF,SAAS,CAACK,aAAzC;AACA,UAAMI,KAAK,GAAG;AACVZ,MAAAA,KAAK,EAAEW,UADG;AAEVE,MAAAA,MAAM,EAAEP,OAAO,CAACC,QAAR,GAAmB,CAAnB,GAAwB,KAAKI,UAAN,GAAoB,IAA3C,GAAkD;AAFhD,KAAd;AAIAR,IAAAA,SAAS,CAACK,aAAV,GAA0BH,SAA1B;AACAF,IAAAA,SAAS,CAACW,SAAV,CAAoBJ,IAApB,CAAyBE,KAAzB;;AACA,QAAIN,OAAO,CAACQ,SAAR,CAAkBC,IAAlB,CAAuBC,MAAvB,IAAiCb,SAAS,CAACc,kBAAV,EAArC,EAAqE;AACjEd,MAAAA,SAAS,CAACO,IAAV;AACH;AACJ;;AAtBc;;AAwBnBX,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameManager = void 0;\nclass FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        const container = this.container;\n        const options = container.options;\n        const fpsLimit = options.fpsLimit > 0 ? options.fpsLimit : 60;\n        if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / fpsLimit) {\n            container.draw();\n            return;\n        }\n        const deltaValue = timestamp - container.lastFrameTime;\n        const delta = {\n            value: deltaValue,\n            factor: options.fpsLimit > 0 ? (60 * deltaValue) / 1000 : 3.6,\n        };\n        container.lastFrameTime = timestamp;\n        container.particles.draw(delta);\n        if (options.particles.move.enable && container.getAnimationStatus()) {\n            container.draw();\n        }\n    }\n}\nexports.FrameManager = FrameManager;\n"]},"metadata":{},"sourceType":"script"}