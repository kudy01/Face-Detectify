{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorbersPlugin = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst Absorbers_1 = require(\"./Absorbers\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Enums_1 = require(\"./Enums\");\n\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n\n  getPlugin(container) {\n    return new Absorbers_1.Absorbers(container);\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    if (options === undefined) {\n      return false;\n    }\n\n    const absorbers = options.absorbers;\n    let loadAbsorbers = false;\n\n    if (absorbers instanceof Array) {\n      if (absorbers.length) {\n        loadAbsorbers = true;\n      }\n    } else if (absorbers !== undefined) {\n      loadAbsorbers = true;\n    } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && Utils_1.Utils.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n      loadAbsorbers = true;\n    }\n\n    return loadAbsorbers;\n  }\n\n  loadOptions(options, source) {\n    var _a, _b;\n\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n        optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n        }\n\n        absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.interactivity.modes.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n        }\n\n        absorberOptions.load(interactivityAbsorbers);\n      }\n    }\n  }\n\n}\n\nconst plugin = new AbsorbersPlugin();\nexports.AbsorbersPlugin = plugin;\n\ntslib_1.__exportStar(require(\"./Enums\"), exports);","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/Plugins/Absorbers/AbsorbersPlugin.js"],"names":["Object","defineProperty","exports","value","AbsorbersPlugin","tslib_1","require","Absorbers_1","Utils_1","Enums_1","Absorber_1","constructor","id","getPlugin","container","Absorbers","needsPlugin","options","_a","_b","_c","undefined","absorbers","loadAbsorbers","Array","length","interactivity","events","onClick","mode","Utils","isInArray","AbsorberClickMode","absorber","loadOptions","source","optionsCast","map","s","tmp","Absorber","load","absorberOptions","interactivityAbsorbers","modes","plugin","__exportStar"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorbersPlugin = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Absorbers_1 = require(\"./Absorbers\");\nconst Utils_1 = require(\"../../Utils\");\nconst Enums_1 = require(\"./Enums\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers_1.Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        let loadAbsorbers = false;\n        if (absorbers instanceof Array) {\n            if (absorbers.length) {\n                loadAbsorbers = true;\n            }\n        }\n        else if (absorbers !== undefined) {\n            loadAbsorbers = true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            Utils_1.Utils.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            loadAbsorbers = true;\n        }\n        return loadAbsorbers;\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nconst plugin = new AbsorbersPlugin();\nexports.AbsorbersPlugin = plugin;\ntslib_1.__exportStar(require(\"./Enums\"), exports);\n"]},"metadata":{},"sourceType":"script"}