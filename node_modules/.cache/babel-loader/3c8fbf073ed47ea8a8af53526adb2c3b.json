{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsColor = void 0;\n\nclass OptionsColor {\n  constructor() {\n    this.value = \"#fff\";\n  }\n\n  static create(source, data) {\n    const color = source !== null && source !== void 0 ? source : new OptionsColor();\n\n    if (data !== undefined) {\n      color.load(typeof data === \"string\" ? {\n        value: data\n      } : data);\n    }\n\n    return color;\n  }\n\n  load(data) {\n    if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n      return;\n    }\n\n    this.value = data.value;\n  }\n\n}\n\nexports.OptionsColor = OptionsColor;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/Options/Classes/OptionsColor.js"],"names":["Object","defineProperty","exports","value","OptionsColor","constructor","create","source","data","color","undefined","load"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMA,YAAN,CAAmB;AACfC,EAAAA,WAAW,GAAG;AACV,SAAKF,KAAL,GAAa,MAAb;AACH;;AACD,SAAOG,MAAP,CAAcC,MAAd,EAAsBC,IAAtB,EAA4B;AACxB,UAAMC,KAAK,GAAGF,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgD,IAAIH,YAAJ,EAA9D;;AACA,QAAII,IAAI,KAAKE,SAAb,EAAwB;AACpBD,MAAAA,KAAK,CAACE,IAAN,CAAW,OAAOH,IAAP,KAAgB,QAAhB,GAA2B;AAAEL,QAAAA,KAAK,EAAEK;AAAT,OAA3B,GAA6CA,IAAxD;AACH;;AACD,WAAOC,KAAP;AACH;;AACDE,EAAAA,IAAI,CAACH,IAAD,EAAO;AACP,QAAI,CAACA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACL,KAAlD,MAA6DO,SAAjE,EAA4E;AACxE;AACH;;AACD,SAAKP,KAAL,GAAaK,IAAI,CAACL,KAAlB;AACH;;AAhBc;;AAkBnBD,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsColor = void 0;\nclass OptionsColor {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    static create(source, data) {\n        const color = source !== null && source !== void 0 ? source : new OptionsColor();\n        if (data !== undefined) {\n            color.load(typeof data === \"string\" ? { value: data } : data);\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\nexports.OptionsColor = OptionsColor;\n"]},"metadata":{},"sourceType":"script"}