{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collider = void 0;\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nconst Enums_1 = require(\"../../../../Enums\");\n\nclass Collider {\n  constructor(container) {\n    this.container = container;\n  }\n\n  static rotate(velocity, angle) {\n    return {\n      horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n      vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle)\n    };\n  }\n\n  static collisionVelocity(v1, v2, m1, m2) {\n    return {\n      horizontal: v1.horizontal * (m1 - m2) / (m1 + m2) + v2.horizontal * 2 * m2 / (m1 + m2),\n      vertical: v1.vertical\n    };\n  }\n\n  static bounce(p1, p2) {\n    const pos1 = p1.getPosition();\n    const pos2 = p2.getPosition();\n    const xVelocityDiff = p1.velocity.horizontal - p2.velocity.horizontal;\n    const yVelocityDiff = p1.velocity.vertical - p2.velocity.vertical;\n    const xDist = pos2.x - pos1.x;\n    const yDist = pos2.y - pos1.y;\n\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n      const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n      const m1 = p1.size.value;\n      const m2 = p2.size.value;\n      const u1 = Collider.rotate(p1.velocity, angle);\n      const u2 = Collider.rotate(p2.velocity, angle);\n      const v1 = Collider.collisionVelocity(u1, u2, m1, m2);\n      const v2 = Collider.collisionVelocity(u2, u1, m1, m2);\n      const vFinal1 = Collider.rotate(v1, -angle);\n      const vFinal2 = Collider.rotate(v2, -angle);\n      p1.velocity.horizontal = vFinal1.horizontal;\n      p1.velocity.vertical = vFinal1.vertical;\n      p2.velocity.horizontal = vFinal2.horizontal;\n      p2.velocity.vertical = vFinal2.vertical;\n    }\n  }\n\n  static destroy(p1, p2) {\n    if (p1.size.value === undefined && p2.size.value !== undefined) {\n      p1.destroy();\n    } else if (p1.size.value !== undefined && p2.size.value === undefined) {\n      p2.destroy();\n    } else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n      if (p1.size.value >= p2.size.value) {\n        p2.destroy();\n      } else {\n        p1.destroy();\n      }\n    }\n  }\n\n  static getRadius(particle, fallback) {\n    return particle.bubble.radius || particle.size.value || fallback;\n  }\n\n  isEnabled(particle) {\n    return particle.particlesOptions.collisions.enable;\n  }\n\n  reset() {}\n\n  interact(p1) {\n    const container = this.container;\n    const pos1 = p1.getPosition();\n    const query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, p1.size.value * 2));\n\n    for (const p2 of query) {\n      if (p1 === p2 || !p2.particlesOptions.collisions.enable || p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode) {\n        continue;\n      }\n\n      const pos2 = p2.getPosition();\n      const dist = Utils_1.Utils.getDistance(pos1, pos2);\n      const defaultSize = container.retina.sizeValue;\n      const radius1 = Collider.getRadius(p1, defaultSize);\n      const radius2 = Collider.getRadius(p2, defaultSize);\n      const distP = radius1 + radius2;\n\n      if (dist <= distP) {\n        this.resolveCollision(p1, p2);\n      }\n    }\n  }\n\n  resolveCollision(p1, p2) {\n    switch (p1.particlesOptions.collisions.mode) {\n      case Enums_1.CollisionMode.absorb:\n        {\n          this.absorb(p1, p2);\n          break;\n        }\n\n      case Enums_1.CollisionMode.bounce:\n        {\n          Collider.bounce(p1, p2);\n          break;\n        }\n\n      case Enums_1.CollisionMode.destroy:\n        {\n          Collider.destroy(p1, p2);\n          break;\n        }\n    }\n  }\n\n  absorb(p1, p2) {\n    const container = this.container;\n    const fps = container.options.fpsLimit / 1000;\n\n    if (p1.size.value === undefined && p2.size.value !== undefined) {\n      p1.destroy();\n    } else if (p1.size.value !== undefined && p2.size.value === undefined) {\n      p2.destroy();\n    } else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n      if (p1.size.value >= p2.size.value) {\n        const factor = Utils_1.Utils.clamp(p1.size.value / p2.size.value, 0, p2.size.value) * fps;\n        p1.size.value += factor;\n        p2.size.value -= factor;\n\n        if (p2.size.value <= container.retina.pixelRatio) {\n          p2.size.value = 0;\n          p2.destroy();\n        }\n      } else {\n        const factor = Utils_1.Utils.clamp(p2.size.value / p1.size.value, 0, p1.size.value) * fps;\n        p1.size.value -= factor;\n        p2.size.value += factor;\n\n        if (p1.size.value <= container.retina.pixelRatio) {\n          p1.size.value = 0;\n          p1.destroy();\n        }\n      }\n    }\n  }\n\n}\n\nexports.Collider = Collider;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Collider.js"],"names":["Object","defineProperty","exports","value","Collider","Utils_1","require","Enums_1","constructor","container","rotate","velocity","angle","horizontal","Math","cos","vertical","sin","collisionVelocity","v1","v2","m1","m2","bounce","p1","p2","pos1","getPosition","pos2","xVelocityDiff","yVelocityDiff","xDist","x","yDist","y","atan2","size","u1","u2","vFinal1","vFinal2","destroy","undefined","getRadius","particle","fallback","bubble","radius","isEnabled","particlesOptions","collisions","enable","reset","interact","query","particles","quadTree","Circle","mode","dist","Utils","getDistance","defaultSize","retina","sizeValue","radius1","radius2","distP","resolveCollision","CollisionMode","absorb","fps","options","fpsLimit","factor","clamp","pixelRatio"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Enums_1 = require(\"../../../../Enums\");\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    static rotate(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return {\n            horizontal: (v1.horizontal * (m1 - m2)) / (m1 + m2) + (v2.horizontal * 2 * m2) / (m1 + m2),\n            vertical: v1.vertical,\n        };\n    }\n    static bounce(p1, p2) {\n        const pos1 = p1.getPosition();\n        const pos2 = p2.getPosition();\n        const xVelocityDiff = p1.velocity.horizontal - p2.velocity.horizontal;\n        const yVelocityDiff = p1.velocity.vertical - p2.velocity.vertical;\n        const xDist = pos2.x - pos1.x;\n        const yDist = pos2.y - pos1.y;\n        if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n            const angle = -Math.atan2(pos2.y - pos1.y, pos2.x - pos1.x);\n            const m1 = p1.size.value;\n            const m2 = p2.size.value;\n            const u1 = Collider.rotate(p1.velocity, angle);\n            const u2 = Collider.rotate(p2.velocity, angle);\n            const v1 = Collider.collisionVelocity(u1, u2, m1, m2);\n            const v2 = Collider.collisionVelocity(u2, u1, m1, m2);\n            const vFinal1 = Collider.rotate(v1, -angle);\n            const vFinal2 = Collider.rotate(v2, -angle);\n            p1.velocity.horizontal = vFinal1.horizontal;\n            p1.velocity.vertical = vFinal1.vertical;\n            p2.velocity.horizontal = vFinal2.horizontal;\n            p2.velocity.vertical = vFinal2.vertical;\n        }\n    }\n    static destroy(p1, p2) {\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                p2.destroy();\n            }\n            else {\n                p1.destroy();\n            }\n        }\n    }\n    static getRadius(particle, fallback) {\n        return particle.bubble.radius || particle.size.value || fallback;\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, p1.size.value * 2));\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.particlesOptions.collisions.enable ||\n                p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            const defaultSize = container.retina.sizeValue;\n            const radius1 = Collider.getRadius(p1, defaultSize);\n            const radius2 = Collider.getRadius(p2, defaultSize);\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.particlesOptions.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                Collider.bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                Collider.destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.options.fpsLimit / 1000;\n        if (p1.size.value === undefined && p2.size.value !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value === undefined) {\n            p2.destroy();\n        }\n        else if (p1.size.value !== undefined && p2.size.value !== undefined) {\n            if (p1.size.value >= p2.size.value) {\n                const factor = Utils_1.Utils.clamp(p1.size.value / p2.size.value, 0, p2.size.value) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.size.value <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.Utils.clamp(p2.size.value / p1.size.value, 0, p1.size.value) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.size.value <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"]},"metadata":{},"sourceType":"script"}