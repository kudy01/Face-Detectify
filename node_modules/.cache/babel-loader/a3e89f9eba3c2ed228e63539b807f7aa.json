{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Enums_1 = require(\"../Enums\");\n\nclass TextDrawer {\n  init(container) {\n    var _a;\n\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const options = container.options;\n\n      if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) || Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n        const shapeOptions = (_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char];\n\n        if (shapeOptions instanceof Array) {\n          for (const character of shapeOptions) {\n            yield Utils_1.Utils.loadFont(character);\n          }\n        } else {\n          if (shapeOptions !== undefined) {\n            yield Utils_1.Utils.loadFont(shapeOptions);\n          }\n        }\n      }\n    });\n  }\n\n  draw(context, particle, radius) {\n    const character = particle.shapeData;\n\n    if (character === undefined) {\n      return;\n    }\n\n    const textData = character.value;\n\n    if (textData === undefined) {\n      return;\n    }\n\n    const textParticle = particle;\n\n    if (textParticle.text === undefined) {\n      textParticle.text = textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n    }\n\n    const text = textParticle.text;\n    const style = character.style;\n    const weight = character.weight;\n    const size = Math.round(radius) * 2;\n    const font = character.font;\n    const fill = particle.fill;\n    const offsetX = text.length * radius / 2;\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    const pos = {\n      x: -offsetX,\n      y: radius / 2\n    };\n\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n  }\n\n}\n\nexports.TextDrawer = TextDrawer;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js"],"names":["Object","defineProperty","exports","value","TextDrawer","tslib_1","require","Utils_1","Enums_1","init","container","_a","__awaiter","options","Utils","isInArray","ShapeType","char","particles","shape","type","character","shapeOptions","Array","loadFont","undefined","draw","context","particle","radius","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","fillText","strokeText"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    init(container) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n"]},"metadata":{},"sourceType":"script"}