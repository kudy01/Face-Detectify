{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar axios = require('axios');\n\nvar _require = require('../utils'),\n    wrapToken = _require.wrapToken;\n\nvar _require2 = require('../helpers'),\n    isSuccess = _require2.isSuccess,\n    clone = _require2.clone;\n\nvar BASE_URL = 'https://api.clarifai-moderation.com';\n\nvar Moderation = function () {\n  function Moderation(_config) {\n    _classCallCheck(this, Moderation);\n\n    this._config = _config;\n  }\n\n  _createClass(Moderation, [{\n    key: 'predict',\n    value: function predict(modelID, imageURL) {\n      return wrapToken(this._config, function (headers) {\n        var url = BASE_URL + '/v2/models/' + modelID + '/outputs';\n        var params = {\n          inputs: [{\n            data: {\n              image: {\n                url: imageURL\n              }\n            }\n          }]\n        };\n        return new Promise(function (resolve, reject) {\n          return axios.post(url, params, {\n            headers: headers\n          }).then(function (response) {\n            if (isSuccess(response)) {\n              var data = clone(response.data);\n              resolve(data);\n            } else {\n              reject(response);\n            }\n          }, reject);\n        });\n      });\n    }\n  }, {\n    key: 'getModerationStatus',\n    value: function getModerationStatus(imageID) {\n      return wrapToken(this._config, function (headers) {\n        var url = BASE_URL + '/v2/inputs/' + imageID + '/outputs';\n        return new Promise(function (resolve, reject) {\n          return axios.get(url, {\n            headers: headers\n          }).then(function (response) {\n            var data = clone(response.data);\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n  }]);\n\n  return Moderation;\n}();\n\nmodule.exports = Moderation;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/clarifai/dist/solutions/Moderation.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","axios","require","_require","wrapToken","_require2","isSuccess","clone","BASE_URL","Moderation","_config","value","predict","modelID","imageURL","headers","url","params","inputs","data","image","Promise","resolve","reject","post","then","response","getModerationStatus","imageID","get","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar axios = require('axios');\n\nvar _require = require('../utils'),\n    wrapToken = _require.wrapToken;\n\nvar _require2 = require('../helpers'),\n    isSuccess = _require2.isSuccess,\n    clone = _require2.clone;\n\nvar BASE_URL = 'https://api.clarifai-moderation.com';\n\nvar Moderation = function () {\n  function Moderation(_config) {\n    _classCallCheck(this, Moderation);\n\n    this._config = _config;\n  }\n\n  _createClass(Moderation, [{\n    key: 'predict',\n    value: function predict(modelID, imageURL) {\n      return wrapToken(this._config, function (headers) {\n        var url = BASE_URL + '/v2/models/' + modelID + '/outputs';\n        var params = {\n          inputs: [{\n            data: {\n              image: {\n                url: imageURL\n              }\n            }\n          }]\n        };\n\n        return new Promise(function (resolve, reject) {\n          return axios.post(url, params, { headers: headers }).then(function (response) {\n            if (isSuccess(response)) {\n              var data = clone(response.data);\n              resolve(data);\n            } else {\n              reject(response);\n            }\n          }, reject);\n        });\n      });\n    }\n  }, {\n    key: 'getModerationStatus',\n    value: function getModerationStatus(imageID) {\n      return wrapToken(this._config, function (headers) {\n        var url = BASE_URL + '/v2/inputs/' + imageID + '/outputs';\n        return new Promise(function (resolve, reject) {\n          return axios.get(url, { headers: headers }).then(function (response) {\n            var data = clone(response.data);\n            resolve(data);\n          }, reject);\n        });\n      });\n    }\n  }]);\n\n  return Moderation;\n}();\n\nmodule.exports = Moderation;"]},"metadata":{},"sourceType":"script"}