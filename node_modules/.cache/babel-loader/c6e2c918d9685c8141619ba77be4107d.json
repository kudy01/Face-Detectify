{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repulser = void 0;\n\nconst Enums_1 = require(\"../../../../Enums\");\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nclass Repulser {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const options = container.options;\n    const mouse = container.interactivity.mouse;\n    const events = options.interactivity.events;\n    const divs = events.onDiv;\n    const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse;\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container;\n    const options = container.options;\n    const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n    const events = options.interactivity.events;\n    const hoverEnabled = events.onHover.enable;\n    const hoverMode = events.onHover.mode;\n    const clickEnabled = events.onClick.enable;\n    const clickMode = events.onClick.mode;\n    const divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n      this.clickRepulse();\n    } else {\n      Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (id, div) => this.singleDivRepulse(id, div));\n    }\n  }\n\n  singleDivRepulse(id, div) {\n    const container = this.container;\n    const elem = document.getElementById(id);\n\n    if (!elem) {\n      return;\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n    const pos = {\n      x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n      y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n    };\n    const repulseRadius = elem.offsetWidth / 2 * pxRatio;\n    const area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n    const divs = container.options.interactivity.modes.repulse.divs;\n    const divRepulse = Utils_1.Utils.divMode(divs, id);\n    this.processRepulse(pos, repulseRadius, area, divRepulse);\n  }\n\n  hoverRepulse() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const repulseRadius = container.retina.repulseModeDistance;\n    this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n\n    const container = this.container;\n    const query = container.particles.quadTree.query(area);\n\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = Utils_1.Utils.getDistances(particle.position, position);\n      const normVec = {\n        x: dx / distance,\n        y: dy / distance\n      };\n      const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.options.interactivity.modes.repulse.speed) * 100;\n      const repulseFactor = Utils_1.Utils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n      particle.position.x = particle.position.x + normVec.x * repulseFactor;\n      particle.position.y = particle.position.y + normVec.y * repulseFactor;\n    }\n  }\n\n  clickRepulse() {\n    const container = this.container;\n\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n\n      container.repulse.count++;\n\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance;\n      const repulseRadius = Math.pow(repulseDistance / 6, 3);\n      const mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n      const query = container.particles.quadTree.query(range);\n\n      for (const particle of query) {\n        const {\n          dx,\n          dy,\n          distance\n        } = Utils_1.Utils.getDistances(mouseClickPos, particle.position);\n        const d = distance * distance;\n        const velocity = container.options.interactivity.modes.repulse.speed;\n        const force = -repulseRadius * velocity / d;\n\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const angle = Math.atan2(dy, dx);\n          particle.velocity.horizontal = force * Math.cos(angle);\n          particle.velocity.vertical = force * Math.sin(angle);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.horizontal = particle.initialVelocity.horizontal;\n        particle.velocity.vertical = particle.initialVelocity.vertical;\n      }\n\n      container.repulse.particles = [];\n    }\n  }\n\n}\n\nexports.Repulser = Repulser;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/tsparticles/dist/Core/Particle/Interactions/Mouse/Repulser.js"],"names":["Object","defineProperty","exports","value","Repulser","Enums_1","require","Utils_1","constructor","container","isEnabled","options","mouse","interactivity","events","divs","onDiv","divRepulse","Utils","isDivModeEnabled","DivMode","repulse","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","divModeExecute","id","div","singleDivRepulse","elem","document","getElementById","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","modes","divMode","processRepulse","mousePos","repulseModeDistance","_a","query","particles","quadTree","particle","dx","dy","distance","getDistances","normVec","velocity","speed","repulseFactor","clamp","Math","pow","finish","count","clicking","repulseDistance","mouseClickPos","undefined","range","d","force","push","angle","atan2","horizontal","cos","vertical","sin","initialVelocity"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Enums_1 = require(\"../../../../Enums\");\nconst Utils_1 = require(\"../../../../Utils\");\nclass Repulser {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.options;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (id, div) => this.singleDivRepulse(id, div));\n        }\n    }\n    singleDivRepulse(id, div) {\n        const container = this.container;\n        const elem = document.getElementById(id);\n        if (!elem) {\n            return;\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n        };\n        const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n        const area = div.type === Enums_1.DivType.circle\n            ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n            : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n        const divs = container.options.interactivity.modes.repulse.divs;\n        const divRepulse = Utils_1.Utils.divMode(divs, id);\n        this.processRepulse(pos, repulseRadius, area, divRepulse);\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.Utils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.options.interactivity.modes.repulse.speed) * 100;\n            const repulseFactor = Utils_1.Utils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n            particle.position.x = particle.position.x + normVec.x * repulseFactor;\n            particle.position.y = particle.position.y + normVec.y * repulseFactor;\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n            const query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.Utils.getDistances(mouseClickPos, particle.position);\n                const d = distance * distance;\n                const velocity = container.options.interactivity.modes.repulse.speed;\n                const force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const angle = Math.atan2(dy, dx);\n                    particle.velocity.horizontal = force * Math.cos(angle);\n                    particle.velocity.vertical = force * Math.sin(angle);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                particle.velocity.vertical = particle.initialVelocity.vertical;\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n"]},"metadata":{},"sourceType":"script"}