{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar axios = require('axios');\n\nvar _require = require('./helpers'),\n    checkType = _require.checkType;\n\nvar Models = require('./Models');\n\nvar Inputs = require('./Inputs');\n\nvar Concepts = require('./Concepts');\n\nvar Workflow = require('./Workflow');\n\nvar Workflows = require('./Workflows');\n\nvar Solutions = require('./solutions/Solutions');\n\nvar _require2 = require('./constants'),\n    API = _require2.API,\n    ERRORS = _require2.ERRORS,\n    getBasePath = _require2.getBasePath;\n\nvar TOKEN_PATH = API.TOKEN_PATH;\n\nif (typeof window !== 'undefined' && !('Promise' in window)) {\n  window.Promise = require('promise');\n}\n\nif (typeof global !== 'undefined' && !('Promise' in global)) {\n  global.Promise = require('promise');\n}\n/**\n * top-level class that allows access to models, inputs and concepts\n * @class\n */\n\n\nvar App = function () {\n  function App(arg1, arg2, arg3) {\n    _classCallCheck(this, App);\n\n    var optionsObj = arg1;\n\n    if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) !== 'object' || arg1 === null) {\n      optionsObj = arg3 || {};\n      optionsObj.clientId = arg1;\n      optionsObj.clientSecret = arg2;\n    }\n\n    this._validate(optionsObj);\n\n    this._init(optionsObj);\n  }\n  /**\n   * Gets a token from the API using client credentials\n   * @return {Promise(token, error)} A Promise that is fulfilled with the token string or rejected with an error\n   *\n   * @deprecated Please switch to using the API key.\n   */\n\n\n  _createClass(App, [{\n    key: 'getToken',\n    value: function getToken() {\n      return this._config.token();\n    }\n    /**\n     * Sets the token to use for the API\n     * @param {String}         _token    The token you are setting\n     * @return {Boolean}                 true if token has valid fields, false if not\n     *\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: 'setToken',\n    value: function setToken(_token) {\n      var token = _token;\n      var now = new Date().getTime();\n\n      if (typeof _token === 'string') {\n        token = {\n          accessToken: _token,\n          expiresIn: 176400\n        };\n      } else {\n        token = {\n          accessToken: _token.access_token || _token.accessToken,\n          expiresIn: _token.expires_in || _token.expiresIn\n        };\n      }\n\n      if (token.accessToken && token.expiresIn || token.access_token && token.expires_in) {\n        if (!token.expireTime) {\n          token.expireTime = now + token.expiresIn * 1000;\n        }\n\n        this._config._token = token;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: '_validate',\n    value: function _validate(_ref) {\n      var clientId = _ref.clientId,\n          clientSecret = _ref.clientSecret,\n          token = _ref.token,\n          apiKey = _ref.apiKey,\n          sessionToken = _ref.sessionToken;\n\n      if (clientId || clientSecret) {\n        console.warn('Client ID/secret has been deprecated. Please switch to using the API key. See here how to do ' + 'the switch: https://blog.clarifai.com/introducing-api-keys-a-safer-way-to-authenticate-your-applications');\n      }\n\n      if ((!clientId || !clientSecret) && !token && !apiKey && !sessionToken) {\n        throw ERRORS.paramsRequired(['apiKey']);\n      }\n    }\n  }, {\n    key: '_init',\n    value: function _init(options) {\n      var _this = this;\n\n      var apiEndpoint = options.apiEndpoint || process && process.env && process.env.API_ENDPOINT || 'https://api.clarifai.com';\n      this._config = {\n        apiEndpoint: apiEndpoint,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        apiKey: options.apiKey,\n        sessionToken: options.sessionToken,\n        basePath: getBasePath(apiEndpoint, options.userId, options.appId),\n        token: function token() {\n          return new Promise(function (resolve, reject) {\n            var now = new Date().getTime();\n\n            if (checkType(/Object/, _this._config._token) && _this._config._token.expireTime > now) {\n              resolve(_this._config._token);\n            } else {\n              _this._getToken(resolve, reject);\n            }\n          });\n        }\n      };\n\n      if (options.token) {\n        this.setToken(options.token);\n      }\n\n      this.models = new Models(this._config);\n      this.inputs = new Inputs(this._config);\n      this.concepts = new Concepts(this._config);\n      this.workflow = new Workflow(this._config);\n      this.workflows = new Workflows(this._config);\n      this.solutions = new Solutions(this._config);\n    }\n    /**\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: '_getToken',\n    value: function _getToken(resolve, reject) {\n      var _this2 = this;\n\n      this._requestToken().then(function (response) {\n        if (response.status === 200) {\n          _this2.setToken(response.data);\n\n          resolve(_this2._config._token);\n        } else {\n          reject(response);\n        }\n      }, reject);\n    }\n    /**\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: '_requestToken',\n    value: function _requestToken() {\n      var url = '' + this._config.basePath + TOKEN_PATH;\n      var clientId = this._config.clientId;\n      var clientSecret = this._config.clientSecret;\n      return axios({\n        'url': url,\n        'method': 'POST',\n        'auth': {\n          'username': clientId,\n          'password': clientSecret\n        }\n      });\n    }\n  }]);\n\n  return App;\n}();\n\nmodule.exports = App;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/clarifai/dist/App.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","axios","require","_require","checkType","Models","Inputs","Concepts","Workflow","Workflows","Solutions","_require2","API","ERRORS","getBasePath","TOKEN_PATH","window","Promise","global","App","arg1","arg2","arg3","optionsObj","clientId","clientSecret","_validate","_init","value","getToken","_config","token","setToken","_token","now","Date","getTime","accessToken","expiresIn","access_token","expires_in","expireTime","_ref","apiKey","sessionToken","console","warn","paramsRequired","options","_this","apiEndpoint","process","env","API_ENDPOINT","basePath","userId","appId","resolve","reject","_getToken","models","inputs","concepts","workflow","workflows","solutions","_this2","_requestToken","then","response","status","data","url","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar axios = require('axios');\n\nvar _require = require('./helpers'),\n    checkType = _require.checkType;\n\nvar Models = require('./Models');\nvar Inputs = require('./Inputs');\nvar Concepts = require('./Concepts');\nvar Workflow = require('./Workflow');\nvar Workflows = require('./Workflows');\nvar Solutions = require('./solutions/Solutions');\n\nvar _require2 = require('./constants'),\n    API = _require2.API,\n    ERRORS = _require2.ERRORS,\n    getBasePath = _require2.getBasePath;\n\nvar TOKEN_PATH = API.TOKEN_PATH;\n\n\nif (typeof window !== 'undefined' && !('Promise' in window)) {\n  window.Promise = require('promise');\n}\n\nif (typeof global !== 'undefined' && !('Promise' in global)) {\n  global.Promise = require('promise');\n}\n\n/**\n * top-level class that allows access to models, inputs and concepts\n * @class\n */\n\nvar App = function () {\n  function App(arg1, arg2, arg3) {\n    _classCallCheck(this, App);\n\n    var optionsObj = arg1;\n    if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) !== 'object' || arg1 === null) {\n      optionsObj = arg3 || {};\n      optionsObj.clientId = arg1;\n      optionsObj.clientSecret = arg2;\n    }\n    this._validate(optionsObj);\n    this._init(optionsObj);\n  }\n\n  /**\n   * Gets a token from the API using client credentials\n   * @return {Promise(token, error)} A Promise that is fulfilled with the token string or rejected with an error\n   *\n   * @deprecated Please switch to using the API key.\n   */\n\n\n  _createClass(App, [{\n    key: 'getToken',\n    value: function getToken() {\n      return this._config.token();\n    }\n\n    /**\n     * Sets the token to use for the API\n     * @param {String}         _token    The token you are setting\n     * @return {Boolean}                 true if token has valid fields, false if not\n     *\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: 'setToken',\n    value: function setToken(_token) {\n      var token = _token;\n      var now = new Date().getTime();\n      if (typeof _token === 'string') {\n        token = {\n          accessToken: _token,\n          expiresIn: 176400\n        };\n      } else {\n        token = {\n          accessToken: _token.access_token || _token.accessToken,\n          expiresIn: _token.expires_in || _token.expiresIn\n        };\n      }\n      if (token.accessToken && token.expiresIn || token.access_token && token.expires_in) {\n        if (!token.expireTime) {\n          token.expireTime = now + token.expiresIn * 1000;\n        }\n        this._config._token = token;\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: '_validate',\n    value: function _validate(_ref) {\n      var clientId = _ref.clientId,\n          clientSecret = _ref.clientSecret,\n          token = _ref.token,\n          apiKey = _ref.apiKey,\n          sessionToken = _ref.sessionToken;\n\n      if (clientId || clientSecret) {\n        console.warn('Client ID/secret has been deprecated. Please switch to using the API key. See here how to do ' + 'the switch: https://blog.clarifai.com/introducing-api-keys-a-safer-way-to-authenticate-your-applications');\n      }\n      if ((!clientId || !clientSecret) && !token && !apiKey && !sessionToken) {\n        throw ERRORS.paramsRequired(['apiKey']);\n      }\n    }\n  }, {\n    key: '_init',\n    value: function _init(options) {\n      var _this = this;\n\n      var apiEndpoint = options.apiEndpoint || process && process.env && process.env.API_ENDPOINT || 'https://api.clarifai.com';\n      this._config = {\n        apiEndpoint: apiEndpoint,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        apiKey: options.apiKey,\n        sessionToken: options.sessionToken,\n        basePath: getBasePath(apiEndpoint, options.userId, options.appId),\n        token: function token() {\n          return new Promise(function (resolve, reject) {\n            var now = new Date().getTime();\n            if (checkType(/Object/, _this._config._token) && _this._config._token.expireTime > now) {\n              resolve(_this._config._token);\n            } else {\n              _this._getToken(resolve, reject);\n            }\n          });\n        }\n      };\n      if (options.token) {\n        this.setToken(options.token);\n      }\n      this.models = new Models(this._config);\n      this.inputs = new Inputs(this._config);\n      this.concepts = new Concepts(this._config);\n      this.workflow = new Workflow(this._config);\n      this.workflows = new Workflows(this._config);\n      this.solutions = new Solutions(this._config);\n    }\n\n    /**\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: '_getToken',\n    value: function _getToken(resolve, reject) {\n      var _this2 = this;\n\n      this._requestToken().then(function (response) {\n        if (response.status === 200) {\n          _this2.setToken(response.data);\n          resolve(_this2._config._token);\n        } else {\n          reject(response);\n        }\n      }, reject);\n    }\n\n    /**\n     * @deprecated Please switch to using the API key.\n     */\n\n  }, {\n    key: '_requestToken',\n    value: function _requestToken() {\n      var url = '' + this._config.basePath + TOKEN_PATH;\n      var clientId = this._config.clientId;\n      var clientSecret = this._config.clientSecret;\n      return axios({\n        'url': url,\n        'method': 'POST',\n        'auth': {\n          'username': clientId,\n          'password': clientSecret\n        }\n      });\n    }\n  }]);\n\n  return App;\n}();\n\nmodule.exports = App;"]},"metadata":{},"sourceType":"script"}