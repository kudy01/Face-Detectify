{"ast":null,"code":"'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Promise = require('promise');\n\nvar validUrl = require('valid-url');\n\nvar _require = require('./constants'),\n    GEO_LIMIT_TYPES = _require.GEO_LIMIT_TYPES,\n    ERRORS = _require.ERRORS;\n\nvar _require2 = require('./helpers'),\n    checkType = _require2.checkType,\n    clone = _require2.clone;\n\nvar _require3 = require('./../package.json'),\n    VERSION = _require3.version;\n\nmodule.exports = {\n  wrapToken: function wrapToken(_config, requestFn) {\n    return new Promise(function (resolve, reject) {\n      if (_config.apiKey) {\n        var headers = {\n          Authorization: 'Key ' + _config.apiKey,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        return requestFn(headers).then(resolve, reject);\n      }\n\n      if (_config.sessionToken) {\n        var _headers = {\n          'X-Clarifai-Session-Token': _config.sessionToken,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        return requestFn(_headers).then(resolve, reject);\n      }\n\n      _config.token().then(function (token) {\n        var headers = {\n          Authorization: 'Bearer ' + token.accessToken,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        requestFn(headers).then(resolve, reject);\n      }, reject);\n    });\n  },\n  formatModel: function formatModel() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var formatted = {};\n\n    if (data.id === null || data.id === undefined) {\n      throw ERRORS.paramsRequired('Model ID');\n    }\n\n    formatted.id = data.id;\n\n    if (data.name) {\n      formatted.name = data.name;\n    }\n\n    formatted.output_info = {};\n\n    if (data.conceptsMutuallyExclusive !== undefined) {\n      formatted.output_info.output_config = formatted.output_info.output_config || {};\n      formatted.output_info.output_config.concepts_mutually_exclusive = !!data.conceptsMutuallyExclusive;\n    }\n\n    if (data.closedEnvironment !== undefined) {\n      formatted.output_info.output_config = formatted.output_info.output_config || {};\n      formatted.output_info.output_config.closed_environment = !!data.closedEnvironment;\n    }\n\n    if (data.concepts) {\n      formatted.output_info.data = {\n        concepts: data.concepts.map(module.exports.formatConcept)\n      };\n    }\n\n    return formatted;\n  },\n  formatInput: function formatInput(data, includeImage) {\n    var input = checkType(/String/, data) ? {\n      url: data\n    } : data;\n    var formatted = {\n      id: input.id || null,\n      data: {}\n    };\n\n    if (input.concepts) {\n      formatted.data.concepts = input.concepts;\n    }\n\n    if (input.metadata) {\n      formatted.data.metadata = input.metadata;\n    }\n\n    if (input.geo) {\n      formatted.data.geo = {\n        geo_point: input.geo\n      };\n    }\n\n    if (input.regions) {\n      formatted.data.regions = input.regions;\n    }\n\n    if (includeImage !== false) {\n      formatted.data.image = {\n        url: input.url,\n        base64: input.base64,\n        crop: input.crop\n      };\n\n      if (data.allowDuplicateUrl) {\n        formatted.data.image.allow_duplicate_url = true;\n      }\n    }\n\n    return formatted;\n  },\n  formatMediaPredict: function formatMediaPredict(data) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'image';\n    var media = void 0;\n\n    if (checkType(/String/, data)) {\n      if (validUrl.isWebUri(data)) {\n        media = {\n          url: data\n        };\n      } else {\n        media = {\n          base64: data\n        };\n      }\n    } else {\n      media = Object.assign({}, data);\n    } // Users can specify their own id to distinguish batch results\n\n\n    var id = void 0;\n\n    if (media.id) {\n      id = media.id;\n      delete media.id;\n    }\n\n    var object = {\n      data: _defineProperty({}, type, media)\n    };\n\n    if (id) {\n      object.id = id;\n    }\n\n    return object;\n  },\n  formatImagesSearch: function formatImagesSearch(image) {\n    var imageQuery = void 0;\n    var input = {\n      input: {\n        data: {}\n      }\n    };\n    var formatted = [];\n\n    if (checkType(/String/, image)) {\n      imageQuery = {\n        url: image\n      };\n    } else {\n      imageQuery = image.url || image.base64 ? {\n        image: {\n          url: image.url,\n          base64: image.base64,\n          crop: image.crop\n        }\n      } : {};\n    }\n\n    input.input.data = imageQuery;\n\n    if (image.id) {\n      input.input.id = image.id;\n      input.input.data = {\n        image: {}\n      };\n\n      if (image.crop) {\n        input.input.data.image.crop = image.crop;\n      }\n    }\n\n    if (image.metadata !== undefined) {\n      input.input.data.metadata = image.metadata;\n    }\n\n    if (image.geo !== undefined) {\n      if (checkType(/Array/, image.geo)) {\n        input.input.data.geo = {\n          geo_box: image.geo.map(function (p) {\n            return {\n              geo_point: p\n            };\n          })\n        };\n      } else if (checkType(/Object/, image.geo)) {\n        if (GEO_LIMIT_TYPES.indexOf(image.geo.type) === -1) {\n          throw ERRORS.INVALID_GEOLIMIT_TYPE;\n        }\n\n        input.input.data.geo = {\n          geo_point: {\n            latitude: image.geo.latitude,\n            longitude: image.geo.longitude\n          },\n          geo_limit: {\n            type: image.geo.type,\n            value: image.geo.value\n          }\n        };\n      }\n    }\n\n    if (image.type !== 'input' && input.input.data.image) {\n      if (input.input.data.metadata || input.input.data.geo) {\n        var dataCopy = {\n          input: {\n            data: clone(input.input.data)\n          }\n        };\n        var imageCopy = {\n          input: {\n            data: clone(input.input.data)\n          }\n        };\n        delete dataCopy.input.data.image;\n        delete imageCopy.input.data.metadata;\n        delete imageCopy.input.data.geo;\n        input = [{\n          output: imageCopy\n        }, dataCopy];\n      } else {\n        input = [{\n          output: input\n        }];\n      }\n    }\n\n    formatted = formatted.concat(input);\n    return formatted;\n  },\n  formatConcept: function formatConcept(concept) {\n    var formatted = concept;\n\n    if (checkType(/String/, concept)) {\n      formatted = {\n        id: concept\n      };\n    }\n\n    return formatted;\n  },\n  formatConceptsSearch: function formatConceptsSearch(query) {\n    if (checkType(/String/, query)) {\n      query = {\n        id: query\n      };\n    }\n\n    var v = {};\n    var type = query.type === 'input' ? 'input' : 'output';\n    delete query.type;\n    v[type] = {\n      data: {\n        concepts: [query]\n      }\n    };\n    return v;\n  },\n  formatObjectForSnakeCase: function formatObjectForSnakeCase(obj) {\n    return Object.keys(obj).reduce(function (o, k) {\n      o[k.replace(/([A-Z])/g, function (r) {\n        return '_' + r.toLowerCase();\n      })] = obj[k];\n      return o;\n    }, {});\n  }\n};","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify/node_modules/clarifai/dist/utils.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Promise","require","validUrl","_require","GEO_LIMIT_TYPES","ERRORS","_require2","checkType","clone","_require3","VERSION","version","module","exports","wrapToken","_config","requestFn","resolve","reject","apiKey","headers","Authorization","then","sessionToken","_headers","token","accessToken","formatModel","data","arguments","length","undefined","formatted","id","paramsRequired","name","output_info","conceptsMutuallyExclusive","output_config","concepts_mutually_exclusive","closedEnvironment","closed_environment","concepts","map","formatConcept","formatInput","includeImage","input","url","metadata","geo","geo_point","regions","image","base64","crop","allowDuplicateUrl","allow_duplicate_url","formatMediaPredict","type","media","isWebUri","assign","object","formatImagesSearch","imageQuery","geo_box","p","indexOf","INVALID_GEOLIMIT_TYPE","latitude","longitude","geo_limit","dataCopy","imageCopy","output","concat","concept","formatConceptsSearch","query","v","formatObjectForSnakeCase","keys","reduce","o","k","replace","r","toLowerCase"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Promise = require('promise');\nvar validUrl = require('valid-url');\n\nvar _require = require('./constants'),\n    GEO_LIMIT_TYPES = _require.GEO_LIMIT_TYPES,\n    ERRORS = _require.ERRORS;\n\nvar _require2 = require('./helpers'),\n    checkType = _require2.checkType,\n    clone = _require2.clone;\n\nvar _require3 = require('./../package.json'),\n    VERSION = _require3.version;\n\nmodule.exports = {\n  wrapToken: function wrapToken(_config, requestFn) {\n    return new Promise(function (resolve, reject) {\n      if (_config.apiKey) {\n        var headers = {\n          Authorization: 'Key ' + _config.apiKey,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        return requestFn(headers).then(resolve, reject);\n      }\n      if (_config.sessionToken) {\n        var _headers = {\n          'X-Clarifai-Session-Token': _config.sessionToken,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        return requestFn(_headers).then(resolve, reject);\n      }\n      _config.token().then(function (token) {\n        var headers = {\n          Authorization: 'Bearer ' + token.accessToken,\n          'X-Clarifai-Client': 'js:' + VERSION\n        };\n        requestFn(headers).then(resolve, reject);\n      }, reject);\n    });\n  },\n  formatModel: function formatModel() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var formatted = {};\n    if (data.id === null || data.id === undefined) {\n      throw ERRORS.paramsRequired('Model ID');\n    }\n    formatted.id = data.id;\n    if (data.name) {\n      formatted.name = data.name;\n    }\n    formatted.output_info = {};\n    if (data.conceptsMutuallyExclusive !== undefined) {\n      formatted.output_info.output_config = formatted.output_info.output_config || {};\n      formatted.output_info.output_config.concepts_mutually_exclusive = !!data.conceptsMutuallyExclusive;\n    }\n    if (data.closedEnvironment !== undefined) {\n      formatted.output_info.output_config = formatted.output_info.output_config || {};\n      formatted.output_info.output_config.closed_environment = !!data.closedEnvironment;\n    }\n    if (data.concepts) {\n      formatted.output_info.data = {\n        concepts: data.concepts.map(module.exports.formatConcept)\n      };\n    }\n    return formatted;\n  },\n  formatInput: function formatInput(data, includeImage) {\n    var input = checkType(/String/, data) ? { url: data } : data;\n    var formatted = {\n      id: input.id || null,\n      data: {}\n    };\n    if (input.concepts) {\n      formatted.data.concepts = input.concepts;\n    }\n    if (input.metadata) {\n      formatted.data.metadata = input.metadata;\n    }\n    if (input.geo) {\n      formatted.data.geo = { geo_point: input.geo };\n    }\n    if (input.regions) {\n      formatted.data.regions = input.regions;\n    }\n    if (includeImage !== false) {\n      formatted.data.image = {\n        url: input.url,\n        base64: input.base64,\n        crop: input.crop\n      };\n      if (data.allowDuplicateUrl) {\n        formatted.data.image.allow_duplicate_url = true;\n      }\n    }\n    return formatted;\n  },\n  formatMediaPredict: function formatMediaPredict(data) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'image';\n\n    var media = void 0;\n    if (checkType(/String/, data)) {\n      if (validUrl.isWebUri(data)) {\n        media = {\n          url: data\n        };\n      } else {\n        media = {\n          base64: data\n        };\n      }\n    } else {\n      media = Object.assign({}, data);\n    }\n\n    // Users can specify their own id to distinguish batch results\n    var id = void 0;\n    if (media.id) {\n      id = media.id;\n      delete media.id;\n    }\n\n    var object = {\n      data: _defineProperty({}, type, media)\n    };\n\n    if (id) {\n      object.id = id;\n    }\n\n    return object;\n  },\n  formatImagesSearch: function formatImagesSearch(image) {\n    var imageQuery = void 0;\n    var input = { input: { data: {} } };\n    var formatted = [];\n    if (checkType(/String/, image)) {\n      imageQuery = { url: image };\n    } else {\n      imageQuery = image.url || image.base64 ? {\n        image: {\n          url: image.url,\n          base64: image.base64,\n          crop: image.crop\n        }\n      } : {};\n    }\n\n    input.input.data = imageQuery;\n    if (image.id) {\n      input.input.id = image.id;\n      input.input.data = { image: {} };\n      if (image.crop) {\n        input.input.data.image.crop = image.crop;\n      }\n    }\n    if (image.metadata !== undefined) {\n      input.input.data.metadata = image.metadata;\n    }\n    if (image.geo !== undefined) {\n      if (checkType(/Array/, image.geo)) {\n        input.input.data.geo = {\n          geo_box: image.geo.map(function (p) {\n            return { geo_point: p };\n          })\n        };\n      } else if (checkType(/Object/, image.geo)) {\n        if (GEO_LIMIT_TYPES.indexOf(image.geo.type) === -1) {\n          throw ERRORS.INVALID_GEOLIMIT_TYPE;\n        }\n        input.input.data.geo = {\n          geo_point: {\n            latitude: image.geo.latitude,\n            longitude: image.geo.longitude\n          },\n          geo_limit: {\n            type: image.geo.type,\n            value: image.geo.value\n          }\n        };\n      }\n    }\n    if (image.type !== 'input' && input.input.data.image) {\n      if (input.input.data.metadata || input.input.data.geo) {\n        var dataCopy = { input: { data: clone(input.input.data) } };\n        var imageCopy = { input: { data: clone(input.input.data) } };\n        delete dataCopy.input.data.image;\n        delete imageCopy.input.data.metadata;\n        delete imageCopy.input.data.geo;\n        input = [{ output: imageCopy }, dataCopy];\n      } else {\n        input = [{ output: input }];\n      }\n    }\n    formatted = formatted.concat(input);\n    return formatted;\n  },\n  formatConcept: function formatConcept(concept) {\n    var formatted = concept;\n    if (checkType(/String/, concept)) {\n      formatted = {\n        id: concept\n      };\n    }\n    return formatted;\n  },\n  formatConceptsSearch: function formatConceptsSearch(query) {\n    if (checkType(/String/, query)) {\n      query = { id: query };\n    }\n    var v = {};\n    var type = query.type === 'input' ? 'input' : 'output';\n    delete query.type;\n    v[type] = {\n      data: {\n        concepts: [query]\n      }\n    };\n    return v;\n  },\n  formatObjectForSnakeCase: function formatObjectForSnakeCase(obj) {\n    return Object.keys(obj).reduce(function (o, k) {\n      o[k.replace(/([A-Z])/g, function (r) {\n        return '_' + r.toLowerCase();\n      })] = obj[k];\n      return o;\n    }, {});\n  }\n};"]},"metadata":{},"sourceType":"script"}